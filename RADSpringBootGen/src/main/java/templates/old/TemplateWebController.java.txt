package ${packageName};

import java.time.LocalDate;
import java.time.format.DateFormatter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.web.servlet.view.RedirectView;
import ${reposistoryImport};
import ${modelEntityImport};
${${otherRepositoryImport}}
${${otherModelEntityImport}}

  @Controller
  @RequestMapping(${webControllerClass}.ENTITY_URL)
  public class ${webControllerClass} {

  public static final String ENTITY_URL = "${ENTITY_URL}";
  public static final String BUSINESS_ENTITY = "${BUSINESS_ENTITY}";
  public static final String BUSINESS_ENTITY_VAR = "businessEntity";
  public static final String INSTANCE = "${INSTANCE}";
  public static final String INSTANCES = "instances";
  public static final String ALL_ENTITY_URL = "";
  public static final String ENTITY_EDIT_URL = "/Edit";
  public static final String ENTITY_DELETE_URL = "/Delete";
  public static final String ENTITY_PUT_URL = "/Put";
  public static final String ENTITY_LIST_PAGE = "entity/list";
  public static final String ENTITY_EDIT_PAGE = "${ENTITY_EDIT_PAGE}";
  public static final String ENTITY_ATT_ID = "${ENTITY_ATT_ID}";
  ${${ENTITY_ATTRIB_}}

  public static final String MODEL_ATTRIBUTE_FORM_ACTION = "formAction";
  public static final String MODEL_ATTRIBUTE_DELETE_FORM_ACTION = "deleteFormAction";
  public static final String MODEL_ATTRIBUTE_ENTITY_ID = "entityId";
  public static final String MODEL_ATTRIBUTE_LIST_PATH = "listPath";

  public static final String MESSAGE = "message";
  public static final String MSG = "msg";

//  public static final String 
    
  
  @Autowired
  ${EntityRepository} repository;

  ${${OtherEntityRepository_}}

    @GetMapping(value=ALL_ENTITY_URL)
    public String listEntities (Model model) {
      model.addAttribute(INSTANCES, repository.findAll());
      model.addAttribute(BUSINESS_ENTITY_VAR, BUSINESS_ENTITY);
      model.addAttribute(MODEL_ATTRIBUTE_FORM_ACTION, ENTITY_URL+ENTITY_EDIT_URL);
      model.addAttribute(MODEL_ATTRIBUTE_DELETE_FORM_ACTION, ENTITY_URL+ENTITY_DELETE_URL);
      model.addAttribute(MODEL_ATTRIBUTE_ENTITY_ID, ENTITY_ATT_ID);
      return ENTITY_LIST_PAGE;
    }


    @PostMapping(value=ENTITY_EDIT_URL) 
    public String editEntity ( @RequestParam (name=ENTITY_ATT_ID, defaultValue="0") Integer ${ENTITY_ATT_ID}
                             , Model model
                             , HttpServletRequest request
                             ) {
      ${MODEL_ENTITY} entity = null;
      Map modelMap = model.asMap();
      Integer ${ENTITY_ATT_ID}2 = (Integer)request.getAttribute(ENTITY_ATT_ID);
      String message = (String)modelMap.get(MESSAGE); 
      if (${ENTITY_ATT_ID}==null || ${ENTITY_ATT_ID}==0) {
        ${ENTITY_ATT_ID} = ${ENTITY_ATT_ID}2;
        if (${ENTITY_ATT_ID}==null || ${ENTITY_ATT_ID}==0)
          entity = new 
                   Flight();
        else 
          entity = repository.findOne(${ENTITY_ATT_ID});
      }  
      else entity = repository.findOne(${ENTITY_ATT_ID});
      
      model.addAttribute(INSTANCE, entity);
      model.addAttribute(MODEL_ATTRIBUTE_LIST_PATH, ENTITY_URL+ALL_ENTITY_URL);
      model.addAttribute(MESSAGE, (String)request.getAttribute(MSG));
      model.addAttribute(MODEL_ATTRIBUTE_FORM_ACTION, ENTITY_URL+ENTITY_PUT_URL);
      ${${MODEL_ADD_CHILD_ENTITY_RPSTRY_ATTRIB_}}
      return ENTITY_EDIT_PAGE;
    }
    
     
    @PostMapping(value = ENTITY_PUT_URL)
    public String putEntity ( @RequestParam(name=ENTITY_ATT_ID, defaultValue="0") Integer ${ENTITY_ATT_ID}
                            ${${REQUEST_PARAM_ENTITY_ATTRIB_}}
                            , Model model
                            , HttpServletRequest request
                            ) 
    {
      ${MODEL_ENTITY} entity;
      if (${ENTITY_ATT_ID}==null || ${ENTITY_ATT_ID}==0) entity = new ${MODEL_ENTITY}();
      else entity = repository.findOne(${ENTITY_ATT_ID});
      ${${PARSE_DATE_ATTRIB_}}

      ${${ENTITY_SET_SIMPLE_ATTRIB_}}

      ${${ENTITY_SET_FK_REF_ATTRIB_}}

      entity = repository.save(entity);
      System.out.println("${MODEL_ENTITY}WebController.putEntity: id = " + entity.${GET_ENTITY_ATT_ID}());
      //entity=null; // testing
      String message = "${BUSINESS_ENTITY} saved.";
      if (entity == null) message = "Sorry, ${BUSINESS_ENTITY} NOT saved.";
      request.setAttribute(MSG, message);
      request.setAttribute(ENTITY_ATT_ID, entity.${GET_ENTITY_ATT_ID}());
      request.setAttribute(RedirectView.RESPONSE_STATUS_ATTRIBUTE, HttpStatus.TEMPORARY_REDIRECT);
      return "forward:"+ENTITY_URL+ENTITY_EDIT_URL;
    }
    
    @PostMapping(value = ENTITY_DELETE_URL)
    public String deleteEntity ( @RequestParam(name=ENTITY_ATT_ID, defaultValue="0") Integer ${ENTITY_ATT_ID}
                               ) 
    {
      ${MODEL_ENTITY} entity = repository.findOne(${ENTITY_ATT_ID});
      repository.delete(entity);
      return "redirect:"+ENTITY_URL;
    }

}

